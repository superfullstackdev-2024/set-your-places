{"version":3,"sources":["shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/context/auth-context.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["Avatar","props","React","createElement","className","concat","style","src","image","alt","width","height","Card","children","UserItem","Link","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","isLoading","setIsLoading","useState","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","inputState","dispatch","useReducer","initialValue","initialValid","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","pickImageHandler","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","login","logout","NewPlace","auth","useContext","inputHandler","title","description","address","history","useHistory","formData","FormData","append","Authorization","Map","mapRef","zoom","window","google","maps","Marker","position","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","coordinates","onDelete","PlaceList","place","creatorId","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","loadedPlace","setLoadedPlace","placeId","setFormData","fetchPlace","JSON","stringify","Auth","isLoginMode","setIsLoginMode","email","password","console","log","switchModeHandler","prevMode","MainHeader","NavLinks","NavLink","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","openDrawerHandler","logoutTimer","App","setToken","tokenExpiratinDate","setTokenExpiratinDate","setUserId","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","routes","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","Switch","Route","path","Redirect","Provider","Boolean","Router","render"],"mappings":"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","file":"static/js/main.71b08ec5.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users'\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) { }\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', 'POST', formData, { Authorization: 'Bearer ' + auth.token });\n      history.push('/');\n    } catch (err) { }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) { }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          {/* <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div> */}\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) { }\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) { }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          // 'http://localhost:5000/api/users/login',\n          process.env.REACT_APP_BACKEND_URL + '/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        console.log('responseData', responseData)\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) { }\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) { }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\n\nlet logoutTimer\n\nconst App = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpiratinDate, setTokenExpiratinDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60)\n    setTokenExpiratinDate(tokenExpirationDate)\n    localStorage.setItem('userData', JSON.stringify({ userId: uid, token, expiration: tokenExpirationDate.toISOString() }));\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpiratinDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpiratinDate) {\n      const remainingTime = tokenExpiratinDate.getTime() - new Date().getTime()\n      logoutTimer = setTimeout(logout, remainingTime)\n    } else {\n      clearTimeout(logoutTimer)\n    }\n  }, [token, logout, tokenExpiratinDate])\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'))\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration))\n    }\n  }, [login])\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: Boolean(token),\n        token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}